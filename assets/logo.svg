<svg viewBox="0 0 800 300" xmlns="http://www.w3.org/2000/svg">
  <!-- Filter Definitions -->
  <defs>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&display=swap');
      
      .logo-text {
        font-family: 'Orbitron', monospace;
        font-size: 5.5rem;
        font-weight: 900;
        letter-spacing: 0.05em;
        fill: none;
        stroke: #ffffff;
        stroke-width: 2;
        stroke-dasharray: 1000;
        stroke-dashoffset: 1000;
        filter: drop-shadow(0 0 15px rgba(138, 43, 226, 0.7));
        animation: drawText 4s ease-in-out forwards;
      }

      .logo-text.data {
        fill: url(#dataGradient);
        animation-delay: 0s;
      }

      .logo-text.karya {
        fill: url(#karyaGradient);
        animation-delay: 2s;
      }

      .neural-node {
        r: 4;
        fill: #8a2be2;
        opacity: 0;
        filter: url(#glow);
        animation: nodeGlow 6s ease-in-out infinite;
      }

      .neural-connection {
        stroke: #4169e1;
        stroke-width: 1.5;
        opacity: 0;
        stroke-dasharray: 5, 5;
        filter: url(#connectionGlow);
        animation: connectionPulse 8s ease-in-out infinite;
      }

      .particle {
        r: 2;
        fill: #00bfff;
        opacity: 0;
        filter: url(#particleGlow);
        animation: particleFloat 10s ease-in-out infinite;
      }

      .circuit-pulse {
        stroke: #00ffff;
        stroke-width: 1.5;
        fill: none;
        opacity: 0;
        filter: url(#circuitGlow);
        stroke-dasharray: 10, 5;
        animation: circuitFlow 12s ease-in-out infinite;
      }

      .data-flow {
        stroke: url(#dataFlowGradient);
        stroke-width: 2;
        fill: none;
        opacity: 0;
        stroke-dasharray: 15, 5;
        stroke-dashoffset: 100;
        filter: url(#dataFlowGlow);
        animation: dataFlow 9s linear infinite;
      }

      .hexagon {
        fill: none;
        stroke: rgba(65, 105, 225, 0.5);
        stroke-width: 1;
        opacity: 0;
        animation: hexPulse 15s ease-in-out infinite;
      }

      .binary-code {
        font-family: 'Courier New', monospace;
        font-size: 14px;
        fill: rgba(0, 191, 255, 0.7);
        opacity: 0;
        animation: binaryFade 8s ease-in-out infinite;
      }

      .glow-effect {
        filter: url(#glow);
        opacity: 0.7;
      }

      @keyframes drawText {
        0% {
          stroke-dashoffset: 1000;
          fill-opacity: 0;
        }
        70% {
          stroke-dashoffset: 0;
          fill-opacity: 0;
        }
        100% {
          stroke-dashoffset: 0;
          fill-opacity: 1;
          stroke: rgba(255, 255, 255, 0.2);
        }
      }

      @keyframes nodeGlow {
        0%, 100% { opacity: 0; transform: scale(1); }
        20% { opacity: 0.9; transform: scale(1.3); }
        40% { opacity: 0.7; transform: scale(1); }
        60% { opacity: 1; transform: scale(1.2); }
        80% { opacity: 0.5; transform: scale(1); }
      }

      @keyframes connectionPulse {
        0%, 100% { opacity: 0; stroke-dashoffset: 20; }
        25% { opacity: 0.8; stroke-dashoffset: 0; }
        50% { opacity: 1; stroke-dashoffset: -10; }
        75% { opacity: 0.6; stroke-dashoffset: -20; }
      }

      @keyframes particleFloat {
        0%, 100% { opacity: 0; transform: translateY(0px) translateX(0px); }
        20% { opacity: 0.9; transform: translateY(-25px) translateX(15px); }
        40% { opacity: 0.7; transform: translateY(-15px) translateX(-20px); }
        60% { opacity: 1; transform: translateY(-35px) translateX(10px); }
        80% { opacity: 0.5; transform: translateY(-10px) translateX(-12px); }
      }

      @keyframes circuitFlow {
        0%, 100% { opacity: 0; stroke-dashoffset: 100; }
        30% { opacity: 0.9; stroke-dashoffset: 0; }
        70% { opacity: 0.7; stroke-dashoffset: -50; }
      }

      @keyframes dataFlow {
        0% { stroke-dashoffset: 100; opacity: 0; }
        10% { opacity: 0.8; }
        90% { opacity: 0.8; }
        100% { stroke-dashoffset: -100; opacity: 0; }
      }

      @keyframes hexPulse {
        0%, 100% { opacity: 0; transform: rotate(0deg); }
        50% { opacity: 0.4; transform: rotate(180deg); }
      }

      @keyframes binaryFade {
        0%, 100% { opacity: 0; }
        25%, 75% { opacity: 0.7; }
        50% { opacity: 1; }
      }

      /* Animation delays for staggered effects */
      .hex-1 { animation-delay: 1s; }
      .hex-2 { animation-delay: 2s; }
      .hex-3 { animation-delay: 3s; }
      .hex-4 { animation-delay: 4s; }
      .hex-5 { animation-delay: 5s; }
      .hex-6 { animation-delay: 6s; }
      .hex-7 { animation-delay: 7s; }

      .connection-1 { animation-delay: 3s; }
      .connection-2 { animation-delay: 3.5s; }
      .connection-3 { animation-delay: 4s; }
      .connection-4 { animation-delay: 4.5s; }
      .connection-5 { animation-delay: 5s; }
      .connection-6 { animation-delay: 5.5s; }

      .circuit-1 { animation-delay: 5s; }
      .circuit-2 { animation-delay: 6s; }
      .circuit-3 { animation-delay: 7s; }

      .flow-1 { animation-delay: 0s; }
      .flow-2 { animation-delay: 3s; }
      .flow-3 { animation-delay: 6s; }

      .node-1 { animation-delay: 3.2s; }
      .node-2 { animation-delay: 3.7s; }
      .node-3 { animation-delay: 4.2s; }
      .node-4 { animation-delay: 4.7s; }
      .node-5 { animation-delay: 5.2s; }
      .node-6 { animation-delay: 5.7s; }

      .particle-1 { animation-delay: 7s; }
      .particle-2 { animation-delay: 7.5s; }
      .particle-3 { animation-delay: 8s; }
      .particle-4 { animation-delay: 8.5s; }
      .particle-5 { animation-delay: 9s; }
      .particle-6 { animation-delay: 9.5s; }

      .binary-1 { animation-delay: 0.5s; }
      .binary-2 { animation-delay: 1s; }
      .binary-3 { animation-delay: 1.5s; }
      .binary-4 { animation-delay: 2s; }
      .binary-5 { animation-delay: 2.5s; }
      .binary-6 { animation-delay: 3s; }
      .binary-7 { animation-delay: 3.5s; }
      .binary-8 { animation-delay: 4s; }
      .binary-9 { animation-delay: 4.5s; }
    </style>

    <linearGradient id="dataGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#8a2be2;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#4169e1;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00bfff;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="karyaGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#4169e1;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#8a2be2;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#c0392b;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="dataFlowGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#8a2be2;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00bfff;stop-opacity:1" />
    </linearGradient>
    
    <!-- Glow Filters -->
    <filter id="glow" height="300%" width="300%" x="-75%" y="-75%">
      <feGaussianBlur in="SourceGraphic" stdDeviation="4" result="blur" />
      <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 20 -8" result="glow" />
      <feComposite in="SourceGraphic" in2="glow" operator="over" />
    </filter>
    
    <filter id="connectionGlow">
      <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
      <feMerge>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    
    <filter id="particleGlow">
      <feGaussianBlur stdDeviation="3" result="blur"/>
      <feColorMatrix in="blur" type="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 15 -7" />
    </filter>
    
    <filter id="circuitGlow">
      <feGaussianBlur stdDeviation="1.5" result="blur"/>
      <feColorMatrix in="blur" type="matrix" values="0 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 20 -8" />
    </filter>
    
    <filter id="dataFlowGlow">
      <feGaussianBlur stdDeviation="3" result="blur"/>
      <feColorMatrix in="blur" type="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 25 -9" />
    </filter>
  </defs>

  <!-- Neural Network Background Elements -->
  <g class="neural-network">
    <!-- Hexagonal grid background -->
    <g class="hex-grid">
      <path class="hexagon hex-1" d="M 100,50 l 25,-15 l 25,15 l 0,30 l -25,15 l -25,-15 Z" />
      <path class="hexagon hex-2" d="M 200,80 l 25,-15 l 25,15 l 0,30 l -25,15 l -25,-15 Z" />
      <path class="hexagon hex-3" d="M 300,40 l 25,-15 l 25,15 l 0,30 l -25,15 l -25,-15 Z" />
      <path class="hexagon hex-4" d="M 400,70 l 25,-15 l 25,15 l 0,30 l -25,15 l -25,-15 Z" />
      <path class="hexagon hex-5" d="M 500,30 l 25,-15 l 25,15 l 0,30 l -25,15 l -25,-15 Z" />
      <path class="hexagon hex-6" d="M 600,60 l 25,-15 l 25,15 l 0,30 l -25,15 l -25,-15 Z" />
      <path class="hexagon hex-7" d="M 700,90 l 25,-15 l 25,15 l 0,30 l -25,15 l -25,-15 Z" />
    </g>
    
    <!-- Binary code particles -->
    <g class="binary-codes">
      <text class="binary-code binary-1" x="50" y="280">01000100</text>
      <text class="binary-code binary-2" x="150" y="260">01100001</text>
      <text class="binary-code binary-3" x="250" y="290">01110100</text>
      <text class="binary-code binary-4" x="350" y="270">01100001</text>
      <text class="binary-code binary-5" x="450" y="280">01001011</text>
      <text class="binary-code binary-6" x="550" y="260">01100001</text>
      <text class="binary-code binary-7" x="650" y="290">01110010</text>
      <text class="binary-code binary-8" x="750" y="270">01111001</text>
      <text class="binary-code binary-9" x="50" y="240">01100001</text>
    </g>

    <!-- Neural Connections -->
    <line class="neural-connection connection-1" x1="50" y1="80" x2="120" y2="60"/>
    <line class="neural-connection connection-2" x1="180" y1="90" x2="240" y2="70"/>
    <line class="neural-connection connection-3" x1="320" y1="85" x2="380" y2="65"/>
    <line class="neural-connection connection-4" x1="450" y1="95" x2="520" y2="75"/>
    <line class="neural-connection connection-5" x1="580" y1="100" x2="650" y2="80"/>
    <line class="neural-connection connection-6" x1="710" y1="110" x2="780" y2="90"/>
    
    <!-- Circuit-like paths -->
    <path class="circuit-pulse circuit-1" d="M 30,120 Q 150,100 270,130 T 550,110"/>
    <path class="circuit-pulse circuit-2" d="M 70,150 Q 200,140 350,160 T 580,140"/>
    <path class="circuit-pulse circuit-3" d="M 100,180 Q 250,170 400,190 T 750,170"/>

    <!-- Data flow paths -->
    <path class="data-flow flow-1" d="M 0,100 Q 100,80 200,110 T 400,90 T 600,120 T 800,100"/>
    <path class="data-flow flow-2" d="M 0,130 Q 150,110 300,140 T 600,120 T 800,150"/>
    <path class="data-flow flow-3" d="M 0,160 Q 120,140 250,170 T 500,150 T 800,180"/>

    <!-- Neural Nodes -->
    <circle class="neural-node node-1" cx="85" cy="70"/>
    <circle class="neural-node node-2" cx="210" cy="80"/>
    <circle class="neural-node node-3" cx="350" cy="75"/>
    <circle class="neural-node node-4" cx="485" cy="85"/>
    <circle class="neural-node node-5" cx="615" cy="90"/>
    <circle class="neural-node node-6" cx="745" cy="100"/>
    
    <!-- Floating Particles -->
    <circle class="particle particle-1" cx="100" cy="50"/>
    <circle class="particle particle-2" cx="250" cy="45"/>
    <circle class="particle particle-3" cx="400" cy="55"/>
    <circle class="particle particle-4" cx="500" cy="40"/>
    <circle class="particle particle-5" cx="650" cy="60"/>
    <circle class="particle particle-6" cx="750" cy="30"/>
  </g>

  <!-- Main Text Elements -->
  <g class="main-text">
    <!-- Glow Effect Layer -->
    <text class="logo-text data glow-effect" x="50" y="150" text-anchor="start">Data</text>
    <text class="logo-text karya glow-effect" x="370" y="150" text-anchor="start">Karya</text>
    
    <!-- Main Text Layer -->
    <text class="logo-text data" x="50" y="150" text-anchor="start">Data</text>
    <text class="logo-text karya" x="370" y="150" text-anchor="start">Karya</text>
  </g>
</svg>